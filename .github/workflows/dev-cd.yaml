name: CD - Deploy to Server (DEV)

on:
  workflow_call:
    inputs:
      JAR_TIMESTAMP:
        required: true
        type: string
    secrets:
      DEV_HOST:
        required: true
      DEV_USER:
        required: true
      DEV_SSH_KEY:
        required: true

jobs:
  deploy:
    # CI 성공한 경우에만 실행
    runs-on: ubuntu-latest

    steps:
      # SSH로 개발 서버에 접속 후 GCS에서 배포 스크립트 및 JAR 다운로드 후 실행
      - name: SSH and deploy from GCS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_HOST }}            # GCP 개발 서버 IP
          username: ${{ secrets.DEV_USER }}        # SSH 사용자명
          key: ${{ secrets.DEV_SSH_KEY }}          # SSH 키 (시크릿 + BEGIN ~) + .pub은 서버 authorized_keys에 등록
          port: 22
          script: |
            echo "SSH 접속 성공, GCS에서 최신 스크립트 및 JAR 다운로드 시작"
            
            # 1. 디렉토리 준비 및 이동
            mkdir -p ~/backend && cd backend
            
            VERSION_TAG="${{ inputs.JAR_TIMESTAMP }}"
            echo "전달받은 버전: $VERSION_TAG"
            
            # 2. 기존 latest.jar → previous.jar 백업
            if [ -f latest.jar ]; then
              echo "기존 latest.jar 백업 → previous.jar"
              mv latest.jar previous.jar
            else
              echo "기존 latest.jar 없음 → 첫 배포"
            fi
            
            # 2. timestamp jar 다운로드 후 latest로 저장
            echo "⬇️ JAR 다운로드 중..."
            gsutil cp gs://6-nemo-bucket/v1/backend-deploy/dev/${VERSION_TAG}.jar latest.jar
            
            # 3. 배포 스크립트 및 헬스체크 스크립트 다운로드
            gsutil cp gs://6-nemo-bucket/v1/backend-deploy/dev/deploy/dev-deploy.sh .
            gsutil cp gs://6-nemo-bucket/v1/backend-deploy/dev/deploy/validate.sh .
            
            # 4. 실행 권한 부여
            chmod +x dev-deploy.sh validate.sh
            
            # 4. 배포 실행
            ./dev-deploy.sh